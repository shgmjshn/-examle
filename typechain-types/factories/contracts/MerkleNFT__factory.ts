/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BytesLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { MerkleNFT, MerkleNFTInterface } from "../../contracts/MerkleNFT";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "metadataURI_",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "merkleRoot_",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "firstTokenId",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "MerkleRootUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "MetadataURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "hasClaimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTokenId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "newRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "newURI",
        type: "string",
      },
    ],
    name: "setMetadataURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405260016009553480156200001657600080fd5b5060405162001956380380620019568339810160408190526200003991620001cd565b33848460006200004a8382620002f7565b506001620000598282620002f7565b5050506001600160a01b0381166200008b57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200009681620000b3565b506008620000a58382620002f7565b5060075550620003c3915050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200012d57600080fd5b81516001600160401b03808211156200014a576200014a62000105565b604051601f8301601f19908116603f0116810190828211818310171562000175576200017562000105565b81604052838152602092508660208588010111156200019357600080fd5b600091505b83821015620001b7578582018301518183018401529082019062000198565b6000602085830101528094505050505092915050565b60008060008060808587031215620001e457600080fd5b84516001600160401b0380821115620001fc57600080fd5b6200020a888389016200011b565b955060208701519150808211156200022157600080fd5b6200022f888389016200011b565b945060408701519150808211156200024657600080fd5b5062000255878288016200011b565b606096909601519497939650505050565b600181811c908216806200027b57607f821691505b6020821081036200029c57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002f2576000816000526020600020601f850160051c81016020861015620002cd5750805b601f850160051c820191505b81811015620002ee57828155600101620002d9565b5050505b505050565b81516001600160401b0381111562000313576200031362000105565b6200032b8162000324845462000266565b84620002a2565b602080601f8311600181146200036357600084156200034a5750858301515b600019600386901b1c1916600185901b178555620002ee565b600085815260208120601f198616915b82811015620003945788860151825594840194600190910190840162000373565b5085821015620003b35787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61158380620003d36000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806373b2e80e116100b857806395d89b411161007c57806395d89b41146102a5578063a22cb465146102ad578063b88d4fde146102c0578063c87b56dd146102d3578063e985e9c5146102e6578063f2fde38b146102f957600080fd5b806373b2e80e14610242578063750521f51461026557806375794a3c146102785780637cb64759146102815780638da5cb5b1461029457600080fd5b80632eb4a7ab1161010a5780632eb4a7ab146101d75780632f52ebb7146101ee57806342842e0e146102015780636352211e1461021457806370a0823114610227578063715018a61461023a57600080fd5b806301ffc9a71461014757806306fdde031461016f578063081812fc14610184578063095ea7b3146101af57806323b872dd146101c4575b600080fd5b61015a610155366004610fc7565b61030c565b60405190151581526020015b60405180910390f35b61017761035e565b604051610166919061102a565b61019761019236600461103d565b6103f0565b6040516001600160a01b039091168152602001610166565b6101c26101bd366004611072565b610419565b005b6101c26101d236600461109c565b610428565b6101e060075481565b604051908152602001610166565b6101c26101fc3660046110d8565b6104b8565b6101c261020f36600461109c565b6106de565b61019761022236600461103d565b6106fe565b6101e0610235366004611157565b610709565b6101c2610751565b61015a610250366004611157565b600a6020526000908152604090205460ff1681565b6101c2610273366004611172565b610765565b6101e060095481565b6101c261028f36600461103d565b6107b8565b6006546001600160a01b0316610197565b6101776107fb565b6101c26102bb3660046111e4565b61080a565b6101c26102ce366004611236565b610815565b6101776102e136600461103d565b61082d565b61015a6102f4366004611312565b6108cb565b6101c2610307366004611157565b6108f9565b60006001600160e01b031982166380ac58cd60e01b148061033d57506001600160e01b03198216635b5e139f60e01b145b8061035857506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461036d90611345565b80601f016020809104026020016040519081016040528092919081815260200182805461039990611345565b80156103e65780601f106103bb576101008083540402835291602001916103e6565b820191906000526020600020905b8154815290600101906020018083116103c957829003601f168201915b5050505050905090565b60006103fb82610937565b506000828152600460205260409020546001600160a01b0316610358565b610424828233610970565b5050565b6001600160a01b03821661045757604051633250574960e11b8152600060048201526024015b60405180910390fd5b600061046483833361097d565b9050836001600160a01b0316816001600160a01b0316146104b2576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161044e565b50505050565b336000908152600a602052604090205460ff161561050a5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161044e565b6000831161054b5760405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b604482015260640161044e565b6007546105905760405162461bcd60e51b815260206004820152601360248201527213595c9adb19481c9bdbdd081b9bdd081cd95d606a1b604482015260640161044e565b6040516bffffffffffffffffffffffff193360601b16602082015260348101849052600090605401604051602081830303815290604052805190602001209050610611838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506007549150849050610a76565b61064d5760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015260640161044e565b336000908152600a60205260408120805460ff19166001179055600954905b8581101561069b576009805461069391339190600061068a8361137f565b91905055610a8c565b60010161066c565b50604080518681526020810183905233917f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a910160405180910390a25050505050565b6106f983838360405180602001604052806000815250610815565b505050565b600061035882610937565b60006001600160a01b038216610735576040516322718ad960e21b81526000600482015260240161044e565b506001600160a01b031660009081526003602052604090205490565b610759610aa6565b6107636000610ad3565b565b61076d610aa6565b600861077a8284836113ee565b507fefafb90526da1636e1335eac0151301742fb755d986954c613b90e891778ba3982826040516107ac9291906114ae565b60405180910390a15050565b6107c0610aa6565b60078190556040518181527f90004c04698bc3322499a575ed3752dd4abf33e0a7294c06a787a0fe01bea9419060200160405180910390a150565b60606001805461036d90611345565b610424338383610b25565b610820848484610428565b6104b23385858585610bc4565b606061083882610937565b506008805461084690611345565b80601f016020809104026020016040519081016040528092919081815260200182805461087290611345565b80156108bf5780601f10610894576101008083540402835291602001916108bf565b820191906000526020600020905b8154815290600101906020018083116108a257829003601f168201915b50505050509050919050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610901610aa6565b6001600160a01b03811661092b57604051631e4fbdf760e01b81526000600482015260240161044e565b61093481610ad3565b50565b6000818152600260205260408120546001600160a01b03168061035857604051637e27328960e01b81526004810184905260240161044e565b6106f98383836001610cef565b6000828152600260205260408120546001600160a01b03908116908316156109aa576109aa818486610df5565b6001600160a01b038116156109e8576109c7600085600080610cef565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615610a17576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b600082610a838584610e59565b14949350505050565b610424828260405180602001604052806000815250610e9c565b6006546001600160a01b031633146107635760405163118cdaa760e01b815233600482015260240161044e565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b5757604051630b61174360e31b81526001600160a01b038316600482015260240161044e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610ce857604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610c069088908890879087906004016114dd565b6020604051808303816000875af1925050508015610c41575060408051601f3d908101601f19168201909252610c3e9181019061151a565b60015b610caa573d808015610c6f576040519150601f19603f3d011682016040523d82523d6000602084013e610c74565b606091505b508051600003610ca257604051633250574960e11b81526001600160a01b038516600482015260240161044e565b805160208201fd5b6001600160e01b03198116630a85bd0160e11b14610ce657604051633250574960e11b81526001600160a01b038516600482015260240161044e565b505b5050505050565b8080610d0357506001600160a01b03821615155b15610dc5576000610d1384610937565b90506001600160a01b03831615801590610d3f5750826001600160a01b0316816001600160a01b031614155b8015610d525750610d5081846108cb565b155b15610d7b5760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161044e565b8115610dc35783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b610e00838383610eb4565b6106f9576001600160a01b038316610e2e57604051637e27328960e01b81526004810182905260240161044e565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161044e565b600081815b8451811015610e9457610e8a82868381518110610e7d57610e7d611537565b6020026020010151610f1a565b9150600101610e5e565b509392505050565b610ea68383610f4c565b6106f9336000858585610bc4565b60006001600160a01b03831615801590610f125750826001600160a01b0316846001600160a01b03161480610eee5750610eee84846108cb565b80610f1257506000828152600460205260409020546001600160a01b038481169116145b949350505050565b6000818310610f36576000828152602084905260409020610f45565b60008381526020839052604090205b9392505050565b6001600160a01b038216610f7657604051633250574960e11b81526000600482015260240161044e565b6000610f848383600061097d565b90506001600160a01b038116156106f9576040516339e3563760e11b81526000600482015260240161044e565b6001600160e01b03198116811461093457600080fd5b600060208284031215610fd957600080fd5b8135610f4581610fb1565b6000815180845260005b8181101561100a57602081850181015186830182015201610fee565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f456020830184610fe4565b60006020828403121561104f57600080fd5b5035919050565b80356001600160a01b038116811461106d57600080fd5b919050565b6000806040838503121561108557600080fd5b61108e83611056565b946020939093013593505050565b6000806000606084860312156110b157600080fd5b6110ba84611056565b92506110c860208501611056565b9150604084013590509250925092565b6000806000604084860312156110ed57600080fd5b83359250602084013567ffffffffffffffff8082111561110c57600080fd5b818601915086601f83011261112057600080fd5b81358181111561112f57600080fd5b8760208260051b850101111561114457600080fd5b6020830194508093505050509250925092565b60006020828403121561116957600080fd5b610f4582611056565b6000806020838503121561118557600080fd5b823567ffffffffffffffff8082111561119d57600080fd5b818501915085601f8301126111b157600080fd5b8135818111156111c057600080fd5b8660208285010111156111d257600080fd5b60209290920196919550909350505050565b600080604083850312156111f757600080fd5b61120083611056565b91506020830135801515811461121557600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561124c57600080fd5b61125585611056565b935061126360208601611056565b925060408501359150606085013567ffffffffffffffff8082111561128757600080fd5b818701915087601f83011261129b57600080fd5b8135818111156112ad576112ad611220565b604051601f8201601f19908116603f011681019083821181831017156112d5576112d5611220565b816040528281528a60208487010111156112ee57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561132557600080fd5b61132e83611056565b915061133c60208401611056565b90509250929050565b600181811c9082168061135957607f821691505b60208210810361137957634e487b7160e01b600052602260045260246000fd5b50919050565b60006001820161139f57634e487b7160e01b600052601160045260246000fd5b5060010190565b601f8211156106f9576000816000526020600020601f850160051c810160208610156113cf5750805b601f850160051c820191505b81811015610ce6578281556001016113db565b67ffffffffffffffff83111561140657611406611220565b61141a836114148354611345565b836113a6565b6000601f84116001811461144e57600085156114365750838201355b600019600387901b1c1916600186901b178355610ce8565b600083815260209020601f19861690835b8281101561147f578685013582556020948501946001909201910161145f565b508682101561149c5760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061151090830184610fe4565b9695505050505050565b60006020828403121561152c57600080fd5b8151610f4581610fb1565b634e487b7160e01b600052603260045260246000fdfea264697066735822122086575ae5d13eb9b026efaadaf687dbcf9c46cb75b500e7c4496f2b3b30103e7e64736f6c63430008180033";

type MerkleNFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MerkleNFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MerkleNFT__factory extends ContractFactory {
  constructor(...args: MerkleNFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    metadataURI_: string,
    merkleRoot_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name_,
      symbol_,
      metadataURI_,
      merkleRoot_,
      overrides || {}
    );
  }
  override deploy(
    name_: string,
    symbol_: string,
    metadataURI_: string,
    merkleRoot_: BytesLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      name_,
      symbol_,
      metadataURI_,
      merkleRoot_,
      overrides || {}
    ) as Promise<
      MerkleNFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MerkleNFT__factory {
    return super.connect(runner) as MerkleNFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleNFTInterface {
    return new Interface(_abi) as MerkleNFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MerkleNFT {
    return new Contract(address, _abi, runner) as unknown as MerkleNFT;
  }
}
